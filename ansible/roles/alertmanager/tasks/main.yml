- name: Creating alertmanager user group
  group: name="{{groupId}}"
  become: true
  tags:
    - alertmanager

- name: Check if Alertmanager is already installed
  stat:
    path: "/usr/local/bin/alertmanager"
  register: alertmanager_installed
  tags:
    - alertmanager

- name: Creating alertmanager user
  user:
    name: "{{userId}}"
    group: "{{groupId}}"
    system: yes
    shell: "/sbin/nologin"
    comment: "{{userId}} nologin User"
    createhome: "no"
    state: present
  when: not alertmanager_installed.stat.exists
  tags:
    - alertmanager


- name: Download alertmanager
  get_url:
    url: "https://github.com/prometheus/alertmanager/releases/download/v{{ version }}/alertmanager-{{ version }}.linux-amd64.tar.gz"
    dest: "/tmp/alertmanager-{{ version }}.linux-amd64.tar.gz"
  delay: 5
  when: not alertmanager_installed.stat.exists
  tags:
    - alertmanager


- name: Unarchive alertmanager
  become: false
  unarchive:
    src: /tmp/alertmanager-{{ version }}.linux-amd64.tar.gz
    dest: /tmp/
    mode: 0755
    remote_src: yes
  when: not alertmanager_installed.stat.exists
  tags:
    - alertmanager


- name: Copy alertmanager executable to bin
  copy:
    src: "/tmp/alertmanager-{{ version }}.linux-amd64/alertmanager"
    dest: "/usr/local/bin/"
    owner: "{{userId}}"
    group: "{{groupId}}"
    remote_src: yes
    mode: 0755
  when: not alertmanager_installed.stat.exists
  tags:
    - alertmanager


- name: Delete alertmanager tmp folder
  file:
    path: '/tmp/alertmanager-{{ version }}.linux-amd64'
    state: absent
  when: not alertmanager_installed.stat.exists
  tags:
    - alertmanager

- name: Creates directories for rules and for templates
  file: 
    path: "{{ item }}"
    state: directory
    owner: "{{userId}}"
    group: "{{groupId}}"
    mode: 0755
  loop:
    - "/etc/alertmanager/"
    - "/etc/prometheus/rules.d/"
    - "/etc/alertmanager/template/"
    - "/data/alertmanager/"
  tags:
    - alertmanager

- name: Copy config file
  copy:
    src: "{{ role_path }}/files/alertmanager.yml"
    dest: /etc/alertmanager/alertmanager.yml
  tags:
    - alertmanager

- name: Copy systemd init file
  template:
    src: init.service.j2
    dest: /etc/systemd/system/alertmanager.service
  notify: systemd_reload
  tags:
    - alertmanager


- name: Copy Alertmanager configuration file
  template:
    src: alertmanager.yml.j2
    dest: /etc/alertmanager/alertmanager.yml
    owner: "{{userId}}"
    group: "{{groupId}}"
    mode: '0644'
  tags:
    - alertmanager

- name: Copy Telegram template to Alertmanager templates directory
  copy:
    src: telegram.tmpl
    dest: /etc/alertmanager/template/telegram.tmpl
    owner: "{{userId}}"
    group: "{{groupId}}"
  tags:
    - alertmanager
    - telegram-alert-tmpl


- name: Copy alerting rules file to Prometheus server
  template:
    src: alert_rules.yml
    dest: /etc/prometheus/rules.d/alert_rules.yml
    owner: "{{userId}}"
    group: "{{groupId}}"
    mode: '0644'
  tags:
    - alertmanager


- name: Start alertmanager service
  ansible.builtin.systemd:
    name: alertmanager
    state: restarted
    enabled: yes
  tags:
    - alertmanager

- name: Check if alertmanager is accessible
  uri:
    url: http://localhost:9093
    method: GET
    status_code: 200
  tags:
    - alertmanager